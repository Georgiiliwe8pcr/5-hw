import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Завантаження таблиць із сайту Вікіпедії
url = "https://uk.wikipedia.org/wiki/Населення_України"
tables = pd.read_html(url)

# Перегляд списку таблиць для вибору потрібної
for i, table in enumerate(tables):
    print(f"Таблиця {i}:")
    print(table.head())

# Вибір таблиці з інформацією про народжуваність (припустимо, що це таблиця з індексом 1)
df = tables[1]

# Перейменування колонок для зручності
df.columns = ["Регіон", "2014", "2015", "2016", "2017", "2018", "2019"]

# Замінюємо символи '—' на NaN
df.replace("—", np.nan, inplace=True)

# Видалення рядків із пропущеними даними у всіх стовпцях
df.dropna(how='all', inplace=True)

# Перетворення колонок із числовими даними на float
df.iloc[:, 1:] = df.iloc[:, 1:].apply(pd.to_numeric, errors='coerce')

# Перегляд перших рядків таблиці
print("Перші рядки таблиці:")
print(df.head())

# Кількість рядків та стовпців
print("Розмір таблиці:", df.shape)

# Частка пропусків у кожній колонці
missing_data = df.isnull().mean() * 100
print("Частка пропусків у кожному стовпці (%):")
print(missing_data)

# Заповнення пропусків середніми значеннями
for column in df.columns[1:]:
    df[column].fillna(df[column].mean(), inplace=True)

# Фільтрація регіонів, де рівень народжуваності у 2019 році вище середнього
average_2019 = df["2019"].mean()
higher_birthrate_regions = df[df["2019"] > average_2019]
print("Регіони з народжуваністю у 2019 році вище середнього:")
print(higher_birthrate_regions)

# Регіон із найвищою народжуваністю у 2014 році
max_birthrate_region = df.loc[df["2014"].idxmax()]
print("Регіон із найвищою народжуваністю у 2014 році:")
print(max_birthrate_region)

# Стовпчикова діаграма народжуваності по регіонах у 2019 році
plt.figure(figsize=(12, 8))
sns.barplot(x="Регіон", y="2019", data=df.sort_values("2019", ascending=False))
plt.title("Народжуваність по регіонах України у 2019 році")
plt.xticks(rotation=90)
plt.ylabel("Народжуваність")
plt.xlabel("Регіон")
plt.tight_layout()
plt.show()

# Збереження очищених даних у CSV-файл
df.to_csv("population_analysis.csv", index=False)
print("Дані збережено у файл population_analysis.csv")
